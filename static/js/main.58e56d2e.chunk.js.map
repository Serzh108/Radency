{"version":3,"sources":["components/Form/Form.module.css","components/Table/Table.js","components/Parser/Parser0.js","helpers/validateArr.js","components/Parser/Parser.js","App.js","index.js","components/Parser/Parser.module.css"],"names":["module","exports","Table","buttonRef","React","createRef","Component","statesToSort","alabama","michigan","nevada","california","Florida","emptyCell","a","length","SyntaxError","validateAr","el","index","rowArr","console","log","slice","indexOf","toLowerCase","elArr","split","forEach","item","idx","arr","trim","join","CurrentDate","Date","test","CSVReader1","useState","state","setState","criticalError","setCriticalError","handleOpenDialog","e","current","open","ref","onFileLoad","data","newAr","subAr","map","error","message","myErrors","validateData","onError","err","file","inputElem","reason","noClick","noDrag","onRemoveFile","style","display","flexDirection","marginBottom","type","onClick","className","styles","btn","fileName","name","errorBlock","wrongData","App","Parser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.58e56d2e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__38K0F\"};","import React from 'react';\nimport styles from './Table.module.css';\n\nfunction Table() {\n  return (\n    <table>\n      <tbody>\n        <tr>\n          <th>ID</th>\n          <th>Full Name</th>\n          <th>Phone</th>\n          <th>Email</th>\n          <th>Age</th>\n          <th>Experience</th>\n          <th>Yearly Income</th>\n          <th>Has children</th>\n          <th>License states</th>\n          <th>Expiration date</th>\n          <th>License number</th>\n          <th>Duplicate with</th>\n        </tr>\n        <tr>\n          <td>1</td>\n          <td>2</td>\n          <td>3</td>\n          <td>1</td>\n          <td>2</td>\n          <td>3</td>\n          <td>1</td>\n          <td>2</td>\n          <td>3</td>\n          <td>1</td>\n          <td>2</td>\n          <td>3</td>\n        </tr>\n        <tr>\n          <td>4</td>\n          <td>5</td>\n          <td>6</td>\n          <td>4</td>\n          <td>5</td>\n          <td>6</td>\n          <td>4</td>\n          <td>5</td>\n          <td>6</td>\n          <td>4</td>\n          <td>5</td>\n          <td>6</td>\n        </tr>\n      </tbody>\n    </table>\n  );\n}\n\nexport default Table;\n","import React, { Component } from 'react';\nimport { CSVReader } from 'react-papaparse';\n\nconst buttonRef = React.createRef();\n\nexport default class CSVReader1 extends Component {\n  handleOpenDialog = e => {\n    // Note that the ref is set async, so it might be null at some point\n    if (buttonRef.current) {\n      buttonRef.current.open(e);\n    }\n  };\n\n  handleOnFileLoad = data => {\n    console.log('---------------------------');\n    console.log(data);\n    console.log('---------------------------');\n  };\n\n  handleOnError = (err, file, inputElem, reason) => {\n    console.log('---------------------------');\n    console.log(err);\n    console.log('---------------------------');\n  };\n\n  handleOnRemoveFile = data => {\n    console.log('---------------------------');\n    console.log(data);\n    console.log('---------------------------');\n  };\n\n  handleRemoveFile = e => {\n    // Note that the ref is set async, so it might be null at some point\n    if (buttonRef.current) {\n      buttonRef.current.removeFile(e);\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <h5>Basic Upload</h5>\n        <CSVReader\n          ref={buttonRef}\n          onFileLoad={this.handleOnFileLoad}\n          onError={this.handleOnError}\n          noClick\n          noDrag\n          onRemoveFile={this.handleOnRemoveFile}\n        >\n          {({ file }) => (\n            <aside\n              style={{\n                display: 'flex',\n                flexDirection: 'row',\n                marginBottom: 10,\n              }}\n            >\n              <button\n                type=\"button\"\n                onClick={this.handleOpenDialog}\n                style={{\n                  borderRadius: 0,\n                  marginLeft: 0,\n                  marginRight: 0,\n                  width: '40%',\n                  paddingLeft: 0,\n                  paddingRight: 0,\n                }}\n              >\n                Browse file\n              </button>\n              <div\n                style={{\n                  borderWidth: 1,\n                  borderStyle: 'solid',\n                  borderColor: '#ccc',\n                  height: 45,\n                  lineHeight: 2.5,\n                  marginTop: 5,\n                  marginBottom: 5,\n                  paddingLeft: 13,\n                  paddingTop: 3,\n                  width: '60%',\n                }}\n              >\n                {file && file.name}\n              </div>\n              <button\n                style={{\n                  borderRadius: 0,\n                  marginLeft: 0,\n                  marginRight: 0,\n                  paddingLeft: 20,\n                  paddingRight: 20,\n                }}\n                onClick={this.handleRemoveFile}\n              >\n                Remove\n              </button>\n            </aside>\n          )}\n        </CSVReader>\n      </>\n    );\n  }\n}\n","const statesToSort = {\n  alabama: 'AL',\n  michigan: 'MI',\n  nevada: 'NV',\n  california: 'CA',\n  Florida: 'FL',\n};\n\nconst emptyCell = a => {\n  if (a.length === 0) {\n    throw new SyntaxError('Missing critical data!');\n  }\n};\n\n// Full Name\nconst firstColumn = el => {\n  // console.log('firstColumn = ', el);\n  emptyCell(el);\n};\n\n// Phone\nconst secondColumn = (el, index, rowArr) => {\n  emptyCell(el);\n  if (el.length > 12 || el.length < 10) {\n    return true;\n  }\n  if (el.length === 12 && (el[0] !== '+' || el[1] !== '1')) {\n    return true;\n  }\n  if (el.length === 11 && el[0] === '1') {\n    rowArr[index] = '+' + el;\n  }\n  if (el.length === 10) {\n    rowArr[index] = '+1' + el;\n  }\n};\n\n// Email\nconst thirdColumn = (el, index, rowArr) => {\n  console.log(`rowArr #${index} : `, rowArr);\n  // if (el.length === 0) {\n  //   throw new SyntaxError('Missing critical data!');\n  // }\n  emptyCell(el);\n};\n\n// Age\nconst fourthColumn = el => {\n  if (el % 1 !== 0) {\n    return true;\n  }\n  if (+el < 21) {\n    return true;\n  }\n};\n\n// Experience\nconst fifthColumn = (el, index, rowArr) => {\n  if (+el > rowArr[index - 1] - 21 || +el < 0) {\n    return true;\n  }\n};\n\n// Yearly Income\nconst sixthColumn = el => {\n  // const twoSignAfterDot = el.slice(el.indexOf('.') + 1).length !== 2;\n  if (el % 1 !== 0) {\n    if (el.slice(el.indexOf('.') + 1).length !== 2) {\n      return true;\n    }\n  }\n  if (+el > 1000000 || +el < 0) {\n    return true;\n  }\n};\n\n// Has children\nconst seventhColumn = (el, index, rowArr) => {\n  if (\n    el.toLowerCase() !== 'true' &&\n    el.toLowerCase() !== 'false' &&\n    el !== ''\n  ) {\n    return true;\n  }\n};\n\n// License states\nconst eighthColumn = (el, index, rowArr) => {\n  const elArr = el.split(',');\n\n  if (elArr.length === 1 && el.length > 2) {\n    rowArr[index] = statesToSort[el.toLowerCase()];\n  }\n\n  if (elArr.length > 1) {\n    elArr.forEach((item, idx, arr) => {\n      if (item.trim().length > 2) {\n        arr[idx] = statesToSort[item.toLowerCase().trim()];\n      } else {\n        arr[idx] = item.trim();\n      }\n    });\n    rowArr[index] = elArr.join('|');\n  }\n};\n\n// Expiration date\nconst ninthColumn = el => {\n  const CurrentDate = new Date();\n  const ourDate = new Date(el);\n  // console.log('ninthColumn = ', el);\n  if (ourDate < CurrentDate) {\n    return true;\n  }\n\n  if (!/\\d{4}-\\d{2}-\\d{2}/.test(el) && !/\\d{2}\\/\\d{2}\\/\\d{4}/.test(el)) {\n    return true;\n  }\n};\n\n// License number\nconst tenthColumn = (el, index, rowArr) => {\n  if (el.length !== 6 || /\\W|_/.test(el)) {\n    return true;\n  }\n  // if (/\\W/.test(el)) {\n  //   return true;\n  // }\n};\n\nconst validateAr = [\n  firstColumn,\n  secondColumn,\n  thirdColumn,\n  fourthColumn,\n  fifthColumn,\n  sixthColumn,\n  seventhColumn,\n  eighthColumn,\n  ninthColumn,\n  tenthColumn,\n];\n\nexport default validateAr;\n","import React, { useState } from 'react';\nimport { CSVReader } from 'react-papaparse';\nimport styles from './Parser.module.css';\nimport validateAr from '../../helpers/validateArr';\n\nconst buttonRef = React.createRef();\n\nfunction CSVReader1() {\n  const [state, setState] = useState([]);\n  const [criticalError, setCriticalError] = useState(false);\n\n  const tableHead = () => {\n    return (\n      <tr>\n        <th>ID</th>\n        <th>Full Name</th>\n        <th>Phone</th>\n        <th>Email</th>\n        <th>Age</th>\n        <th>Experience</th>\n        <th>Yearly Income</th>\n        <th>Has children</th>\n        <th>License states</th>\n        <th>Expiration date</th>\n        <th>License number</th>\n        <th>Duplicate with</th>\n      </tr>\n    );\n  };\n\n  // const firstFunc = (a, b) => {\n  //   console.log('firstFunc = ', a + b);\n  // };\n  // const secondFunc = (a, b) => {\n  //   console.log('secondFunc = ', a * b);\n  // };\n  // const thirdFunc = (a, b) => {\n  //   console.log('thirdFunc = ', a - b);\n  // };\n\n  // const validateAr = [firstFunc, secondFunc, thirdFunc];\n  validateAr[0](5, 7);\n  validateAr[1](5, 7);\n  validateAr[2](5, 3);\n\n  // testAr.forEach((item, idx, newAr) => {\n  //   newAr[idx] = item + 1;\n  //   console.log('item = ', item);\n  // });\n  // console.log('!!!testAr = ', testAr);\n\n  const validateData = data => {\n    console.log('validateData', data[0].data);\n    console.log('Phone: ', data[0].data[1]);\n    data &&\n      data.forEach((item, idx, newAr) => {\n        console.log('item data.length: ', item.data.length);\n        const subAr =\n          item.data.length > 1\n            ? item.data.map((el, index, rowArr) => {\n                console.log(`el- ${idx}-${index} : `, el);\n\n                try {\n                  if (validateAr[index](el, index, rowArr)) return false;\n                } catch (error) {\n                  console.log('error', error.message);\n                  setCriticalError(true);\n                }\n                return el.length > 12 ? false : true;\n              })\n            : [];\n        console.log('subAr', subAr);\n        newAr[idx].myErrors = subAr;\n      });\n    console.log('!!!  newAr = ', data);\n  };\n\n  const handleOpenDialog = e => {\n    // Note that the ref is set async, so it might be null at some point\n    if (buttonRef.current) {\n      buttonRef.current.open(e);\n    }\n  };\n\n  const handleOnFileLoad = data => {\n    console.log('---------------------------');\n    console.log(data);\n    console.log('---------------------------');\n    setCriticalError(false);\n    validateData(data);\n    setState(data);\n  };\n\n  const handleOnError = (err, file, inputElem, reason) => {\n    console.log('---------------------------');\n    console.log(err);\n    console.log('---------------------------');\n  };\n\n  const handleOnRemoveFile = data => {\n    console.log('---------------------------');\n    console.log(data);\n    console.log('---------------------------');\n  };\n\n  const handleRemoveFile = e => {\n    // Note that the ref is set async, so it might be null at some point\n    if (buttonRef.current) {\n      buttonRef.current.removeFile(e);\n    }\n  };\n\n  return (\n    <>\n      <h5>Basic Upload #1</h5>\n      <CSVReader\n        ref={buttonRef}\n        onFileLoad={handleOnFileLoad}\n        onError={handleOnError}\n        noClick\n        noDrag\n        onRemoveFile={handleOnRemoveFile}\n      >\n        {({ file }) => (\n          <aside\n            style={{\n              display: 'flex',\n              flexDirection: 'row',\n              marginBottom: 10,\n            }}\n          >\n            <button\n              type=\"button\"\n              onClick={handleOpenDialog}\n              className={styles.btn}\n            >\n              Browse file\n            </button>\n            <div className={styles.fileName}>{file && file.name}</div>\n            {/* <button\n              style={{\n                borderRadius: 0,\n                marginLeft: 0,\n                marginRight: 0,\n                paddingLeft: 20,\n                paddingRight: 20,\n              }}\n              onClick={handleRemoveFile}\n            >\n              Remove\n            </button> */}\n          </aside>\n        )}\n      </CSVReader>\n      {criticalError ? (\n        <div className={styles.errorBlock}>\n          <h2>File format is not correct</h2>\n        </div>\n      ) : (\n        <table>\n          <tbody>\n            {tableHead()}\n            {state.length > 0 &&\n              state.map(\n                (item, idx) =>\n                  item.data.length > 1 && (\n                    <tr key={idx}>\n                      <td>{idx + 1}</td>\n                      {item.data.map((el, index) => (\n                        <td\n                          key={index}\n                          className={\n                            !item.myErrors[index] ? styles.wrongData : null\n                          }\n                        >\n                          {el.trim()}\n                          {' ' + item.myErrors[index]}\n                        </td>\n                      ))}\n                      <td>{(idx + 1) * 2}</td>\n                    </tr>\n                  ),\n              )}\n          </tbody>\n        </table>\n      )}\n    </>\n  );\n}\n\nexport default CSVReader1;\n","import React from 'react';\nimport Form from './components/Form/Form';\nimport Table from './components/Table/Table';\nimport Parser from './components/Parser/Parser0';\nimport Parser1 from './components/Parser/Parser';\nimport './App.css';\n\nfunction App() {\n  // const submitForm = () => {\n  //   console.log('File loaded!');\n  // };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>Radency - test task.</p>\n      </header>\n      {/* <Form />\n      <Table /> */}\n      <Parser1 />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Parser_btn__aP6pj\",\"fileName\":\"Parser_fileName__LLGmH\",\"wrongData\":\"Parser_wrongData__3RhmV\",\"errorBlock\":\"Parser_errorBlock__1m84I\"};"],"sourceRoot":""}